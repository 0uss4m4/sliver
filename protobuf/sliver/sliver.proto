syntax = "proto3";

package sliverpb;

message Envelope {
  uint32 Type = 1; // Message type
  uint64 ID = 2;   // Resp ID
  bytes Data = 9;  // Actual message data
}

message Register {
  string Name = 1;
  string Hostname = 2;
  string Username = 3;
  string Uid = 4;
  string Gid = 5;
  string Os = 6;
  string Arch = 7;
  int32 Pid = 8;
  string filename = 9;
}

message Ping {
  int32 nonce = 1;
}

message KillReq {
  int32 SliverID = 9;
}

// aka Shellcode
message Task {
  string encoder = 2;
  bytes data = 9;
}

message RemoteTask {
  string encoder = 2;
  int32 pid = 3;
  bytes data = 9;
}

message PsReq {
  int32 SliverID = 9;
}

message Ps {
  repeated Process Processes = 1;
}

message Process {
  int32 pid = 1;
  int32 ppid = 2;
  string executable = 3;
  string owner = 4;
}


message DirListReq {
  string path = 1;

  int32 SliverID = 9;
}

message DirList {
  string path = 1;
  bool exists = 2; 
  repeated FileInfo files = 3;
}

message FileInfo {
  string Name = 1;
  bool isDir = 2;
  int64 size = 3;
}

message PwdReq {

  int32 SliverID = 9;
}

message CdReq {
  string path = 1;
  int32 SliverID = 9;
}

message Pwd {
  string path = 1;
  string err = 2;
}

message RmReq {
  string path = 1;

  int32 SliverID = 9;
}

message Rm {
  bool success = 1;
  string path = 2;
  string Err = 3;
}

message MkdirReq {
  string path = 1;

  int32 SliverID = 9;
}

message Mkdir {
  bool success = 1;
  string path = 2;
  string Err = 3;
}

message DownloadReq {
  string path = 1;

  int32 SliverID = 9;
}

message Download {
  string path = 1;
  string encoder = 2;
  bool exists = 3;

  bytes data = 9;
}

message UploadReq {
  string path = 1;
  string encoder = 2;
  bytes data = 3;

  int32 SliverID = 9;
}

message Upload {
  string path = 1;
  string err = 2;
  bool success = 3;
}

message ProcessDumpReq {
  int32 pid = 1;

  int32 Timeout = 8;
  int32 SliverID = 9;
}

message ProcessDump {
  bytes data = 1;
  string err = 2;
}

// DNS Specific messages
message DNSSessionInit {
  bytes key = 1;
}

message DNSPoll {
  repeated DNSBlockHeader blocks = 1;
}

message DNSBlockHeader {
  string id = 1;
  uint32 size = 2;
}

// Shell messages
message StartReq {
  string Path = 1;
}

message Start {
  string Err = 1;
}

message ShellData {
  uint32 ID = 1;

  bytes Stdin = 2;
  bytes Stdout = 3;
  bytes Stderr = 4;

  bool Close = 5;
  
  int32 SliverID = 9;
}